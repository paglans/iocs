#
# Copyright (c) 2024 Cosylab d.d.
#

## The search path for database files
epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(ADCORE)/db:$(ADGENICAM)/db:$(ADARAVIS)/db")

## The following parameters are common for all camera instances and 
## have to be set before instantiating cameras

## $(QSIZE) The queue size for all plugins.  In autosave.
epicsEnvSet("QSIZE",  "2000")

## $(XSIZE) The maximum image width; used to set the maximum size for row profiles in the NDPluginStats plugin and 1-D FFT
epicsEnvSet("XSIZE", "2590")

## $(YSIZE) The maximum image height; used to set the maximum size for column profiles in the NDPluginStats plugin
epicsEnvSet("YSIZE", "1944")

## $(NCHANS) The maximum number of time series points in the NDPluginStats, NDPluginROIStats, and NDPluginAttribute plugins
epicsEnvSet("NCHANS", "2048")

## $(CBUFFS) The maximum number of frames buffered in the NDPluginCircularBuff plugin
epicsEnvSet("CBUFFS", "500")

## $(MAX_THREADS) The maximum number of threads for plugins which can run in multiple threads. Defaults to 5.
epicsEnvSet("MAX_THREADS", "5")

## $(NELEMENTS) for mono image = XSIZE * YSIZE (2590x2944 in this case)
epicsEnvSet("NELEMENTS", "5034960585501")

## Description:
## This file loads areaDetector plugins on a single camera instance.
## It should be ran after setting device specific environment variables.        

# aravisConfig(const char *portName, const char *cameraName, int enableCaching, size_t maxMemory, int priority, int stackSize)
aravisConfig("Camera", "$(CAMERA_NAME)", $(ENABLE_CACHING=1), 0, 0, 0)

# enable auto-connect: asynAutoConnect(portName, addr, yesNo)
asynAutoConnect("Camera", 0, 1)
asynSetAutoConnectTimeout(10)

# Load the main aravis database
dbLoadRecords("$(ADARAVIS)/db/aravisCamera.template", "P=$(PREFIX),R=Cam:,PORT=Camera")

# Load the autogenerated camera .template file GenICam script dump
dbLoadRecords("$(CAMERA_APP)/db/Basler-a2A1920-51gmBAS.template", "P=$(PREFIX),R=Cam:,PORT=Camera,TIMEOUT=1")

# Create a TIFF file saving plugin, takes RAW image as input
NDFileTIFFConfigure("RawTiff", $(QSIZE), 0, "Camera", 0)
dbLoadRecords("NDFileTIFF.template", "P=$(PREFIX),R=RawTiff:,PORT=RawTiff,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Camera")

# Create a JPEG file saving plugin, takes RAW image as input
NDFileJPEGConfigure("RawJPEG", $(QSIZE), 0, "Camera", 0)
dbLoadRecords("NDFileJPEG.template", "P=$(PREFIX),R=RawJPEG:,PORT=RawJPEG,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Camera")

# Create a PVA arrays plugin
NDPvaConfigure("RawImage", 20, $(QSIZE), "Camera", 0, "$(PREFIX)RawImg", 0, 0, 0)
dbLoadRecords("NDPva.template", "P=$(PREFIX), R=RawImg:, PORT=RawImage, ADDR=0, TIMEOUT=1,NDARRAY_PORT=Camera")

# Create a CA arrays plugin
NDStdArraysConfigure("RawImageCA", 20, $(QSIZE), "Camera", 0, 0)
dbLoadRecords("$(ADCORE)/db/NDStdArrays.template", "P=$(PREFIX),R=RawImgCA:,PORT=RawImageCA,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Camera,TYPE=Int8,FTVL=CHAR,NELEMENTS=$(NELEMENTS)") 

# Create ROI plugin
NDROIConfigure("Roi", $(QSIZE), 0, "Camera", 0, 0, 0, 0, 0, $(MAX_THREADS=5))
dbLoadRecords("NDROI.template", "P=$(PREFIX),R=ROI:, PORT=Roi,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Camera")

# Create a TIFF file saving plugin, takes ROI image as input
NDFileTIFFConfigure("RoiTiff", $(QSIZE), 0, "Roi", 0)
dbLoadRecords("NDFileTIFF.template", "P=$(PREFIX),R=ROITiff:,PORT=RoiTiff,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Roi")

# Create a JPEG file saving plugin, takes ROI image as input
NDFileJPEGConfigure("RoiJPEG", $(QSIZE), 0, "Roi", 0)
dbLoadRecords("NDFileJPEG.template", "P=$(PREFIX),R=ROIJPEG:,PORT=RoiJPEG,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Roi")

# Create a PVA arrays plugin
NDPvaConfigure("RoiImage", 20, $(QSIZE), "Roi", 0, "$(PREFIX)RoiImg", 0, 0, 0)
dbLoadRecords("NDPva.template", "P=$(PREFIX), R=ROIImg:, PORT=RoiImage, ADDR=0, TIMEOUT=1,NDARRAY_PORT=Roi")

# Create a CA arrays plugin
NDStdArraysConfigure("RoiImageCA", 20, $(QSIZE), "Roi", 0, 0)
dbLoadRecords("$(ADCORE)/db/NDStdArrays.template", "P=$(PREFIX),R=ROIImgCA:,PORT=RoiImageCA,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Roi,TYPE=Int8,FTVL=CHAR,NELEMENTS=$(NELEMENTS)") 

# Create statistics plugin
NDStatsConfigure("Stats", $(QSIZE), 0, "Roi", 0, 0, 0, 0, 0, $(MAX_THREADS=5))
dbLoadRecords("NDStats.template", "P=$(PREFIX),R=Stats:, PORT=Stats,ADDR=0,TIMEOUT=1,HIST_SIZE=256,XSIZE=$(XSIZE),YSIZE=$(YSIZE),NCHANS=$(NCHANS),NDARRAY_PORT=Roi")
NDTimeSeriesConfigure("Stats_TS", $(QSIZE), 0, "Stats", 1, 23)
dbLoadRecords("$(ADCORE)/db/NDTimeSeries.template",  "P=$(PREFIX),R=Stats:TS:, PORT=Stats_TS,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Stats,NDARRAY_ADDR=1,NCHANS=$(NCHANS),ENABLED=1")

# Overlay plugin
NDOverlayConfigure("Over", $(QSIZE), 0, "Roi", 0, 3, 0, 0, 0, 0, $(MAX_THREADS=5))
dbLoadRecords("NDOverlay.template", "P=$(PREFIX),R=Overlay:,PORT=Over,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Roi")
dbLoadRecords("NDOverlayN.template","P=$(PREFIX),R=Overlay:1:,NAME=Cross,SHAPE=0,O=Overlay,XCENT=$(PREFIX)Stats:CentroidX_RBV,YCENT=$(PREFIX)Stats:CentroidY_RBV,XSIZE=junk,YSIZE=junk,PORT=Over,ADDR=0,TIMEOUT=1")
#dbLoadRecords("NDOverlayN.template","P=$(PREFIX),R=Overlay:2:,NAME=Elipse, SHAPE=2,O=Overlay,XCENT=$(PREFIX)Stats:CentroidX_RBV,YCENT=$(PREFIX)Stats:CentroidY_RBV,XSIZE=$(PREFIX)Stats:SigmaX_RBV,YSIZE=$(PREFIX)Stats:SigmaY_RBV,PORT=Over,ADDR=1,TIMEOUT=1")

# Create a PVA arrays plugin
NDPvaConfigure("OverlayImage", 20, $(QSIZE), "Over", 0, "$(PREFIX)OverlayImg", 0, 0, 0)
dbLoadRecords("NDPva.template", "P=$(PREFIX), R=OverlayImg:, PORT=OverlayImage, ADDR=0, TIMEOUT=1,NDARRAY_PORT=Over")

# Create a CA arrays plugin
NDStdArraysConfigure("OverlayImageCA", 20, $(QSIZE), "Over", 0, 0)
dbLoadRecords("$(ADCORE)/db/NDStdArrays.template", "P=$(PREFIX),R=OverlayImgCA:,PORT=OverlayImageCA,ADDR=0,TIMEOUT=1,NDARRAY_PORT=Over,TYPE=Int8,FTVL=CHAR,NELEMENTS=$(NELEMENTS)") 

